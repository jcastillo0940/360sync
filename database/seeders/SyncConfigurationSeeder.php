<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Crypt;
use Carbon\Carbon;

class SyncConfigurationSeeder extends Seeder
{
    public function run(): void
    {
        $now = Carbon::now();

        $configs = [
            // ICG API
            [
                'key' => 'icg_api_url',
                'category' => 'api',
                'label' => 'ICG API URL',
                'value' => env('ICG_API_URL', ''),
                'encrypted_value' => null,
                'is_encrypted' => false,
                'type' => 'url',
                'description' => 'Base URL for ICG API',
                'is_required' => true,
                'is_visible' => true,
                'display_order' => 1,
                'validation_rules' => 'required|url',
                'default_value' => null,
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            [
                'key' => 'icg_api_user',
                'category' => 'api',
                'label' => 'ICG API User',
                'value' => env('ICG_API_USER', ''),
                'encrypted_value' => null,
                'is_encrypted' => false,
                'type' => 'string',
                'description' => 'Username for ICG API authentication',
                'is_required' => true,
                'is_visible' => true,
                'display_order' => 2,
                'validation_rules' => 'required|string',
                'default_value' => null,
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            [
                'key' => 'icg_api_password',
                'category' => 'api',
                'label' => 'ICG API Password',
                'value' => null,
                'encrypted_value' => env('ICG_API_PASSWORD') ? Crypt::encryptString(env('ICG_API_PASSWORD')) : null,
                'is_encrypted' => true,
                'type' => 'password',
                'description' => 'Password for ICG API authentication',
                'is_required' => true,
                'is_visible' => true,
                'display_order' => 3,
                'validation_rules' => 'required',
                'default_value' => null,
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            
            // Magento API
            [
                'key' => 'magento_base_url',
                'category' => 'api',
                'label' => 'Magento Base URL',
                'value' => env('MAGENTO_BASE_URL', ''),
                'encrypted_value' => null,
                'is_encrypted' => false,
                'type' => 'url',
                'description' => 'Base URL for Magento store',
                'is_required' => true,
                'is_visible' => true,
                'display_order' => 10,
                'validation_rules' => 'required|url',
                'default_value' => null,
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            [
                'key' => 'magento_api_token',
                'category' => 'api',
                'label' => 'Magento API Token',
                'value' => null,
                'encrypted_value' => env('MAGENTO_API_TOKEN') ? Crypt::encryptString(env('MAGENTO_API_TOKEN')) : null,
                'is_encrypted' => true,
                'type' => 'password',
                'description' => 'Integration token for Magento API',
                'is_required' => true,
                'is_visible' => true,
                'display_order' => 11,
                'validation_rules' => 'required',
                'default_value' => null,
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            [
                'key' => 'magento_store_id',
                'category' => 'api',
                'label' => 'Magento Store ID',
                'value' => env('MAGENTO_STORE_ID', '1'),
                'encrypted_value' => null,
                'is_encrypted' => false,
                'type' => 'integer',
                'description' => 'Default store view ID',
                'is_required' => true,
                'is_visible' => true,
                'display_order' => 12,
                'validation_rules' => 'required|integer',
                'default_value' => '1',
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            [
                'key' => 'magento_batch_size',
                'category' => 'api',
                'label' => 'Magento Batch Size',
                'value' => env('MAGENTO_BATCH_SIZE', '50'),
                'encrypted_value' => null,
                'is_encrypted' => false,
                'type' => 'integer',
                'description' => 'Number of products to process per batch',
                'is_required' => false,
                'is_visible' => true,
                'display_order' => 13,
                'validation_rules' => 'integer|min:1|max:100',
                'default_value' => '50',
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            
            // FTP Configuration
            [
                'key' => 'ftp_enabled',
                'category' => 'ftp',
                'label' => 'FTP Enabled',
                'value' => env('FTP_ENABLED', 'true'),
                'encrypted_value' => null,
                'is_encrypted' => false,
                'type' => 'boolean',
                'description' => 'Enable FTP file transfer',
                'is_required' => false,
                'is_visible' => true,
                'display_order' => 20,
                'validation_rules' => 'boolean',
                'default_value' => 'true',
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            [
                'key' => 'ftp_server',
                'category' => 'ftp',
                'label' => 'FTP Server',
                'value' => env('FTP_SERVER', ''),
                'encrypted_value' => null,
                'is_encrypted' => false,
                'type' => 'string',
                'description' => 'FTP server hostname',
                'is_required' => false,
                'is_visible' => true,
                'display_order' => 21,
                'validation_rules' => 'string',
                'default_value' => null,
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            [
                'key' => 'ftp_port',
                'category' => 'ftp',
                'label' => 'FTP Port',
                'value' => env('FTP_PORT', '21'),
                'encrypted_value' => null,
                'is_encrypted' => false,
                'type' => 'integer',
                'description' => 'FTP server port',
                'is_required' => false,
                'is_visible' => true,
                'display_order' => 22,
                'validation_rules' => 'integer',
                'default_value' => '21',
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            [
                'key' => 'ftp_username',
                'category' => 'ftp',
                'label' => 'FTP Username',
                'value' => env('FTP_USERNAME', ''),
                'encrypted_value' => null,
                'is_encrypted' => false,
                'type' => 'string',
                'description' => 'FTP authentication username',
                'is_required' => false,
                'is_visible' => true,
                'display_order' => 23,
                'validation_rules' => 'string',
                'default_value' => null,
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            [
                'key' => 'ftp_password',
                'category' => 'ftp',
                'label' => 'FTP Password',
                'value' => null,
                'encrypted_value' => env('FTP_PASSWORD') ? Crypt::encryptString(env('FTP_PASSWORD')) : null,
                'is_encrypted' => true,
                'type' => 'password',
                'description' => 'FTP authentication password',
                'is_required' => false,
                'is_visible' => true,
                'display_order' => 24,
                'validation_rules' => null,
                'default_value' => null,
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            
            // Process Configuration
            [
                'key' => 'concurrent_pages',
                'category' => 'process',
                'label' => 'Concurrent Pages',
                'value' => '97',
                'encrypted_value' => null,
                'is_encrypted' => false,
                'type' => 'integer',
                'description' => 'Number of API pages to process concurrently',
                'is_required' => false,
                'is_visible' => true,
                'display_order' => 30,
                'validation_rules' => 'integer|min:1',
                'default_value' => '97',
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            [
                'key' => 'max_pages',
                'category' => 'process',
                'label' => 'Max Pages',
                'value' => '2000',
                'encrypted_value' => null,
                'is_encrypted' => false,
                'type' => 'integer',
                'description' => 'Maximum number of pages to process',
                'is_required' => false,
                'is_visible' => true,
                'display_order' => 31,
                'validation_rules' => 'integer|min:1',
                'default_value' => '2000',
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
            [
                'key' => 'filter_by_webvisb',
                'category' => 'process',
                'label' => 'Filter by WEBVISB',
                'value' => 'true',
                'encrypted_value' => null,
                'is_encrypted' => false,
                'type' => 'boolean',
                'description' => 'Only process products with WEBVISB = T',
                'is_required' => false,
                'is_visible' => true,
                'display_order' => 32,
                'validation_rules' => 'boolean',
                'default_value' => 'true',
                'updated_by' => null,
                'last_tested_at' => null,
                'test_passed' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ],
        ];

        DB::table('sync_configurations')->insert($configs);

        $this->command->info('✅ Sync configurations seeded successfully!');
    }
}